#SRC := ??

CFLAGS := -g -m32 -O1 -ffreestanding
CPPFLAGS := -nostdinc -idirafter lib 
#-fno-stack-protector

#GCC_PATH := /usr/lib/gcc/x86_64-pc-linux-gnu/8.1.1
GCC_PATH := /usr/lib/gcc/x86_64-linux-gnu/5

CPPFLAGS += -I$(GCC_PATH)/include -I$(GCC_PATH)/include-fixed
ASMS := $(wildcard *.S)  # wildcard *.S

SRCS := $(wildcard *.c)  # wildcard *.c
LIBS := $(wildcard lib/*.c)

PROG := $(patsubst %.S,%.o,$(ASMS))  # patsubst %.S → %
PROG += $(patsubst %.c,%.o,$(SRCS))  # patsubst %.c → %
PROG += $(patsubst %.c,%.o,$(LIBS))

QEMU := qemu-system-i386 -serial mon:stdio
KERN ?= kernel
BOOT := -kernel $(KERN) $(QEMU_EXTRA)

qemu: $(KERN)
	$(QEMU) $(BOOT)

qemu-gdb: $(KERN)
	$(QEMU) -kernel kern0 -S -gdb tcp:127.0.0.1:7508 $(BOOT)

gdb:
	gdb -q -s kern0 -n -ex 'target remote 127.0.0.1:7508'

kernel: $(PROG)
	ld -m elf_i386 -Ttext 0x100000 --entry kmain $^ -o $@
	# Verificar imagen Multiboot v1.
	grub-file --is-x86-multiboot $@

all: $(PROG)
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $<

clean:
	rm -f kernel *.o core

.PHONY: clean qemu qemu-gdb gdb


#CPPFLAGS := -nostdinc -idirafter lib

#GCC_PATH := /usr/lib/gcc/x86_64-linux-gnu/6
#CPPFLAGS += -I$(GCC_PATH)/include -I$(GCC_PATH)/include-fixed
